"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStorageClass = exports.LocalStorageManager = exports.BaseStorageManager = void 0;
var _errors = require("../utils/errors");
var _CookieStorageProvider = require("./CookieStorageProvider");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /*!
* Copyright 2024-Present Animoca Brands Corporation Ltd. 
* 
* Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
* 
* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
var SavedObject = /*#__PURE__*/function () {
  function SavedObject(storageProvider, storageName) {
    _classCallCheck(this, SavedObject);
    _defineProperty(this, "storageProvider", void 0);
    _defineProperty(this, "storageName", void 0);
    this.storageProvider = storageProvider;
    this.storageName = storageName;
  }
  return _createClass(SavedObject, [{
    key: "getItem",
    value: function getItem(key) {
      return this.getStorage()[key];
    }
  }, {
    key: "setItem",
    value: function setItem(key, value) {
      return this.updateStorage(key, value);
    }
  }, {
    key: "removeItem",
    value: function removeItem(key) {
      return this.clearStorage(key);
    }
  }, {
    key: "getStorage",
    value: function getStorage() {
      var storageString = this.storageProvider.getItem(this.storageName);
      storageString = storageString || '{}';
      try {
        return JSON.parse(storageString);
      } catch (e) {
        throw new _errors.InternalError('Unable to parse storage string: ' + this.storageName);
      }
    }
  }, {
    key: "setStorage",
    value: function setStorage(obj) {
      try {
        var storageString = obj ? JSON.stringify(obj) : '{}';
        this.storageProvider.setItem(this.storageName, storageString);
      } catch (e) {
        throw new Error('Unable to set storage: ' + this.storageName);
      }
    }
  }, {
    key: "clearStorage",
    value: function clearStorage(key) {
      if (!key) {
        // clear all
        this.storageProvider.removeItem(this.storageName);
        return;
      }
      var obj = this.getStorage();
      delete obj[key];
      this.setStorage(obj);
    }
  }, {
    key: "updateStorage",
    value: function updateStorage(key, value) {
      var obj = this.getStorage();
      obj[key] = value;
      this.setStorage(obj);
    }
  }]);
}();
var BaseStorageManager = exports.BaseStorageManager = /*#__PURE__*/function () {
  function BaseStorageManager(storageName, storageProvider) {
    _classCallCheck(this, BaseStorageManager);
    _defineProperty(this, "storageProvider", void 0);
    _defineProperty(this, "storageName", void 0);
    this.storageName = storageName;
    this.storageProvider = storageProvider;
  }
  return _createClass(BaseStorageManager, [{
    key: "getStorageObject",
    value: function getStorageObject() {
      return new SavedObject(this.storageProvider, this.storageName);
    }
  }]);
}();
var LocalStorageManager = exports.LocalStorageManager = /*#__PURE__*/function (_BaseStorageManager2) {
  function LocalStorageManager(storageName) {
    _classCallCheck(this, LocalStorageManager);
    return _callSuper(this, LocalStorageManager, [storageName, window.localStorage]);
  }
  _inherits(LocalStorageManager, _BaseStorageManager2);
  return _createClass(LocalStorageManager);
}(BaseStorageManager);
var getStorageClass = exports.getStorageClass = function getStorageClass(opts) {
  // Only cookie support domain based storage
  if (opts.storageType === 'cookie') {
    return /*#__PURE__*/function (_BaseStorageManager3) {
      function CookieStorageManager(storageName) {
        _classCallCheck(this, CookieStorageManager);
        return _callSuper(this, CookieStorageManager, [storageName, new _CookieStorageProvider.CookieStorageProvider(opts.cookieDomain)]);
      }
      _inherits(CookieStorageManager, _BaseStorageManager3);
      return _createClass(CookieStorageManager);
    }(BaseStorageManager);
  } else {
    return LocalStorageManager;
  }
};